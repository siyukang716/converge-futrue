package ${package.Controller};

import java.util.List;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import ${package.Entity}.${entity};
#if(${restControllerStyle})
import org.springframework.web.bind.annotation.RestController;
#else
import org.springframework.stereotype.Controller;
#end
import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import ${package.ServiceImpl}.${table.serviceImplName};


/**
 *
 * @ClassName: ${table.controllerName}
 * @Description: TODO(这里用一句话描述这个类的作用)${table.comment}
 * @author ${author}
 * @date ${date}
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@Api(value = "${table.comment}crud功能",tags = "")
@RequestMapping(value ="#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${superControllerClass})
public class ${table.controllerName}  {
#else
public class ${table.controllerName} {
#end
@Autowired
private ${table.serviceImplName} ${table.serviceImplName.substring(0, 1).toLowerCase()}${table.serviceImplName.substring(1)};

@RequestMapping("/tolist")
public ModelAndView toList() {
        ModelAndView model = new ModelAndView();
        model.setViewName("");
        return model;
        }

/**
 * 列表查询
 * @param p
 * @return
 */
@GetMapping("/getList")
@ResponseBody
@ApiOperation(value = "列表查询",httpMethod = "GET",produces = MediaType.APPLICATION_JSON_VALUE)
public PageDataResult getUsers(Page<${entity}> p) {
        PageDataResult pdr = new PageDataResult();
        QueryWrapper<${entity}> wrapper = new QueryWrapper<${entity}>();
        IPage<${entity}> page = ${table.serviceImplName.substring(0, 1).toLowerCase()}${table.serviceImplName.substring(1)}.page(p,wrapper);
        pdr.setTotals((int)page.getTotal());
        pdr.setList(page.getRecords());
        return pdr;
        }


/**
 * 增加或修改地址信息
 * @param
 * @return
 */
@RequestMapping("/aOrU")
@ResponseBody
public Result aOrU(${entity} entity) {
        Result result = Result.getInstance();
        LambdaUpdateWrapper<${entity}> wrapper = Wrappers.<${entity}>lambdaUpdate();
        boolean b = ${table.serviceImplName.substring(0, 1).toLowerCase()}${table.serviceImplName.substring(1)}.saveOrUpdate(entity);
        result.setStatus(IStatusMessage.SystemStatus.SUCCESS.getCode());
        result.setMessage("完成信息完善!!!!!!");
        if (!b) {
        result.setStatus(IStatusMessage.SystemStatus.ERROR.getCode());
        result.setMessage("操作异常，请您稍后再试");
        }
        return result;
        }

/**
 * 删除地址信息
 * @param
 * @return
 */
@RequestMapping("/del")
@ResponseBody
public Result del(Integer id) {
        Result result = Result.getInstance();
        boolean b = ${table.serviceImplName.substring(0, 1).toLowerCase()}${table.serviceImplName.substring(1)}.removeById(id);
        result.setStatus(IStatusMessage.SystemStatus.SUCCESS.getCode());
        result.setMessage("删除成功!!!!!!");
        if (!b) {
        result.setStatus(IStatusMessage.SystemStatus.ERROR.getCode());
        result.setMessage("操作异常，请您稍后再试");
        }
        return result;
        }

@RequestMapping("/getById")
@ResponseBody
public Result getById(Integer id) {
        Result result = Result.getInstance();
    ${entity} obj = ${table.serviceImplName.substring(0, 1).toLowerCase()}${table.serviceImplName.substring(1)}.getById(id);
        result.setData(obj);
        result.setStatus(IStatusMessage.SystemStatus.SUCCESS.getCode());
        result.setMessage("获取成功!!!!!!");
        if (obj == null){
        result.setStatus(IStatusMessage.SystemStatus.ERROR.getCode());
        result.setMessage("操作异常，请您稍后再试");
        }
        return result;
        }
}